# To create an object of type 'Item':
java = Item.objects.create(name="java", description="A programming lanuage. Current version is Java 8")
java.name
java.description
java.pk
java.id
java.save()  # SAVEs item 'Item' object in the database.
# -------------------------------------
# GET ALL items from the 'Item' model:
Item.objects.all()
# -------------------------------------
del java  # empty the variable.
# way1 to GET the java object from the database:
java = Item.objects.get(pk=1)
java
# -------------------------------------
del java  # empty the variable.
java
# way2 to GET the java object from database:
java = Item.objects.get(name='java')
java
# -------------------------------------
# to DELETE an item from the database:
java = Item.objects.get(pk=1)
java.delete()
# -------------------------------------
git init
git remote -v
git config --global http.sslverify false
git remote set-url origin https://sultanvfx@github.com/sultanvfx/programming_database.git
git status
git add .
git status
git commit -a -m "Initial 'Programming Database' project commit"
git push -u origin master  # Push your code to the 'master' branch of the remote 'origin' repo.
# -------------------------------------
Workflow for querying data from Database & showing its result in html:
Import your Models in the views.py file and then query it & finally send the
result dictionary to html.
# -------------------------------------
To remove .pyc files from git, follow the below steps:
#1. remove .pyc locally
$ find . -name "*.pyc" -print
$ find . -name "*.pyc" -delete
#2. commit

#3. push to remote repo.
# -------------------------------------
Note: If below command doesnt work:
$ git push
Then force the push by saying:
$ git push --force  # Not that this process of forcing is not recommended.
# -------------------------------------
To get the log of pushes:
$ git log
# -------------------------------------
$ git remote  # origin
$ git branch  # master
# -------------------------------------
Important Tip: To remove already added & commited file from git:
$ git rm --cached db.sqlite3
# here we removing the file 'db.sqlite3'.
# Note to use the --cached parameter.
# -------------------------------------

# -------------------------------------
